2-Criar o arquivo haproxy.cfg
#Crie o diret√≥rio (se quiser organizar):
mkdir -p /root/haproxy
cd /root/haproxy

#Crie o arquivo haproxy.cfg:
nano /root/haproxy.cfg

#Cole o conte√∫do:
global
    daemon
    maxconn 256

defaults
    mode http
    timeout connect 5000ms
    timeout client 50000ms
    timeout server 50000ms

frontend http_front
    bind *:80
    default_backend php_servers

backend php_servers
    balance roundrobin
    server node02 192.168.56.12:80 check
    server node03 192.168.56.13:80 check
    server node04 192.168.56.14:80 check

#Confirme se est√° correto:
cat /root/haproxy/haproxy.cfg

3-Subir o servi√ßo HAProxy
docker service create \
--name haproxy \
--publish 80:80 \
--constraint 'node.hostname == node01' \
--mount type=bind,source=/root/haproxy/haproxy.cfg,target=/usr/local/etc/haproxy/haproxy.cfg \
haproxy:alpine

4-Criar um index.php b√°sico no volume app

#Criar o volume (se ainda n√£o existir)
docker volume create app

#Montar o volume localmente para inserir os arquivos
Como o volume est√° apenas no Docker, voc√™ pode acess√°-lo diretamente assim no manager (node01):
cd /var/lib/docker/volumes/app/_data

# criar o arquivo index.php
C:\Users\italo\OneDrive\Documentos\Treinamento\Docker-Treinamentos\10-Cluster Swarm com Load Balancer com HAProxy e Docker Registry\index.php

5-Criar o dockerfile
#diretorio
/apache-php-mysql

#dockerfile (node1)
FROM php:8.3-apache
RUN docker-php-ext-install mysqli && docker-php-ext-enable mysqli

#executar o build (node1)
docker build -t php:8.3-apache-mysqli /apache-php-mysql

6-PRECISAMOS INSTALAR O NFS-SERVER
apt-get install nfs-server -y

5-agora editar o arquivo de configuracao onde #vamos replicar
nano /etc/exports

/var/lib/docker/volumes/app/_data *(rw,sync,subtree_check)

#para exportar
exportfs -ar

#para reiniciar 
systemctl restart nfs-server

6-criar um arquivo para automatizar
C:\Users\italo\OneDrive\Documentos\Treinamento\Docker-Treinamentos\10-Cluster Swarm com Load Balancer com HAProxy e Docker Registry\setup_registry_phpservice.sh










6-Enviar o dockerfile para os ambientes do node01

#Se voc√™ rodar:
scp -r /apache-php-mysql root@192.168.56.12:/apache-php-mysql 
scp -r /apache-php-mysql root@192.168.56.13:/apache-php-mysql 
scp -r /apache-php-mysql root@192.168.56.14:/apache-php-mysql 

#E o diret√≥rio /apache-php-mysql ainda n√£o existir no destino, ele ser√° criado automaticamente junto com a c√≥pia.

#üî∏ Por√©m, se voc√™ quiser copiar apenas o arquivo .tar.gz e n√£o a pasta inteira, a√≠ sim o diret√≥rio precisa existir:
scp php83.tar.gz root@192.168.56.12:/apache-php-mysql/ \
scp php83.tar.gz root@192.168.56.13:/apache-php-mysql/ \
scp php83.tar.gz root@192.168.56.14:/apache-php-mysql/ \

#‚ùó Esse comando vai falhar se /apache-php-mysql ainda n√£o existir no destino.

7-